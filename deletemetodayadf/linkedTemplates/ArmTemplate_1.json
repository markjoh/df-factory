{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "deletemetodayadf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "customerTable",
								"type": "DatasetReference"
							},
							"name": "customertablestream"
						},
						{
							"dataset": {
								"referenceName": "orderheadertable",
								"type": "DatasetReference"
							},
							"name": "orderheaderstream"
						},
						{
							"dataset": {
								"referenceName": "OrdersInPool",
								"type": "DatasetReference"
							},
							"name": "GETMAXCustomerSK"
						},
						{
							"dataset": {
								"referenceName": "OrdersInPool",
								"type": "DatasetReference"
							},
							"name": "ListOfOrderIds"
						}
					],
					"sinks": [
						{
							"name": "OrdersSKSink"
						},
						{
							"dataset": {
								"referenceName": "OrdersInPool",
								"type": "DatasetReference"
							},
							"name": "dimOrders"
						}
					],
					"transformations": [
						{
							"name": "customerjointoorderheader"
						},
						{
							"name": "selectColumns"
						},
						{
							"name": "OrdersSK"
						},
						{
							"name": "DerivedColumnsTotalAmountOrdersSK"
						},
						{
							"name": "OrderIdDoesNotExist"
						},
						{
							"name": "DropRowIfCustomerIdIsNull"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customerid as integer,",
						"          customername as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> customertablestream",
						"source(output(",
						"          orderid as integer,",
						"          ordernumber as string,",
						"          customerid as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> orderheaderstream",
						"source(output(",
						"          ordersSK as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT coalesce(MAX(ordersSK), 0) as ordersSK from dbo.orders',",
						"     format: 'query',",
						"     staged: true) ~> GETMAXCustomerSK",
						"source(output(",
						"          orderId as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT distinct orderId from dbo.orders',",
						"     format: 'query',",
						"     staged: true) ~> ListOfOrderIds",
						"customertablestream, OrderIdDoesNotExist join(customertablestream@customerid == orderheaderstream@customerid,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> customerjointoorderheader",
						"customerjointoorderheader select(mapColumn(",
						"          customerid = customertablestream@customerid,",
						"          customername,",
						"          orderid,",
						"          ordernumber",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectColumns",
						"DropRowIfCustomerIdIsNull keyGenerate(output(OrdersSK as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> OrdersSK",
						"OrdersSK derive(OrdersSK = coalesce(OrdersSK, 0) + coalesce(OrdersSKSink#outputs()[1].ordersSK, 0),",
						"          TotalAmount = multiply(coalesce(customerid, 0), coalesce(orderid, 0))) ~> DerivedColumnsTotalAmountOrdersSK",
						"orderheaderstream, ListOfOrderIds exists(orderheaderstream@orderid == ListOfOrderIds@orderId,",
						"     negate:true,",
						"     broadcast: 'auto')~> OrderIdDoesNotExist",
						"selectColumns filter(!(isNull({customerid}))) ~> DropRowIfCustomerIdIsNull",
						"GETMAXCustomerSK sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 0,",
						"     mapColumn(",
						"          ordersSK",
						"     )) ~> OrdersSKSink",
						"DerivedColumnsTotalAmountOrdersSK sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ordersSK as integer,",
						"          orderId as integer,",
						"          customerId as integer,",
						"          CustomerName as string,",
						"          OrderNumber as string,",
						"          TotalAmount as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ordersSK = OrdersSK,",
						"          orderId = orderid,",
						"          customerId = customerid,",
						"          CustomerName = customername,",
						"          OrderNumber = ordernumber,",
						"          TotalAmount",
						"     )) ~> dimOrders"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "translatelogcsvtoparquet",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"logcsvstream": {
										"filename": "Log.csv"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "copylogcsvtoavro",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AvroSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "AvroWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Correlationid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Correlationid",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Operationname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operationname",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Eventcategory",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eventcategory",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Eventinitiatedby",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eventinitiatedby",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Resourcetype",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resourcetype",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Resourcegroup",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resourcegroup",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dsCSV_log",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Log.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LogAvro",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-07T16:50:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "createorderstable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"customertablestream": {},
									"orderheaderstream": {},
									"GETMAXCustomerSK": {},
									"ListOfOrderIds": {},
									"OrdersSKSink": {},
									"dimOrders": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "lsparquet_log",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"sourceStagingConcurrency": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-07T17:37:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		}
	]
}