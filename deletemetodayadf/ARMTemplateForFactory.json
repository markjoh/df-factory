{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "deletemetodayadf"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'"
		},
		"lsAppDb20231107_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lsAppDb20231107'"
		},
		"lsAppdb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lsAppdb'"
		},
		"lsCSVCustomer_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lsCSVCustomer'"
		},
		"lsCSV_log_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lsCSV_log'"
		},
		"lsCSV_new_log_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lsCSV_new_log'"
		},
		"lsparquet_log_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lsparquet_log'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mrjstrggen2anonne3.dfs.core.windows.net/"
		},
		"lsCSVCustomer_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mrjstrggen2anonne3.dfs.core.windows.net/"
		},
		"lsCSV_log_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mrjstrggen2anonne3.dfs.core.windows.net/"
		},
		"lsCSV_new_log_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mrjstrggen2anonne3.dfs.core.windows.net/"
		},
		"lsparquet_log_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mrjstrggen2anonne3.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "translatelogcsvtoparquet",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"logcsvstream": {
										"filename": "Log.csv"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "copylogcsvtoavro",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AvroSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "AvroWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Correlationid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Correlationid",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Operationname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operationname",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Eventcategory",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eventcategory",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Eventinitiatedby",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eventinitiatedby",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Resourcetype",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resourcetype",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Resourcegroup",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resourcegroup",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dsCSV_log",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Log.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LogAvro",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-07T16:50:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/datasets/dsCSV_log')]",
				"[concat(variables('factoryId'), '/datasets/LogAvro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "createorderstable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"customertablestream": {},
									"orderheaderstream": {},
									"GETMAXCustomerSK": {},
									"ListOfOrderIds": {},
									"OrdersSKSink": {},
									"dimOrders": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "lsparquet_log",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"sourceStagingConcurrency": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-07T17:37:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]",
				"[concat(variables('factoryId'), '/linkedServices/lsparquet_log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetLogCSVFile",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://mrjstrggen2anonne3.blob.core.windows.net/csv/Customer01.csv",
							"method": "GET",
							"headers": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetaDataBlobs",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DimCustomerCSVMetaData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetMetaDataBlobs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetMetaDataBlobs').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "copyDimCustomer",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlDWSink",
											"writeBehavior": "Insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DimCustomerCSVCopy",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSynapseAnalyticsTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DimCustomerCSVMetaData')]",
				"[concat(variables('factoryId'), '/datasets/DimCustomerCSVCopy')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LogAvro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "avro"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrdersInPool')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ordersSK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "orderId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerName",
						"type": "varchar"
					},
					{
						"name": "OrderNumber",
						"type": "varchar"
					},
					{
						"name": "TotalAmount",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customerTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsAppDb20231107",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "customerid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customername",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsAppDb20231107')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsCSV_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsCSVCustomer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Customer01.csv",
						"fileSystem": "csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsCSVCustomer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsCSV_log')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsCSV_log",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "log.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": "csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "Correlationid",
						"type": "String"
					},
					{
						"name": "Operationname",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Eventcategory",
						"type": "String"
					},
					{
						"name": "Level",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Subscription",
						"type": "String"
					},
					{
						"name": "Eventinitiatedby",
						"type": "String"
					},
					{
						"name": "Resourcetype",
						"type": "String"
					},
					{
						"name": "Resourcegroup",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsCSV_log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsCSV_new_log')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsCSV_new_log",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "log.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": "csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "Correlationid",
						"type": "String"
					},
					{
						"name": "Operationname",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Eventcategory",
						"type": "String"
					},
					{
						"name": "Level",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Subscription",
						"type": "String"
					},
					{
						"name": "Eventinitiatedby",
						"type": "String"
					},
					{
						"name": "Resourcetype",
						"type": "String"
					},
					{
						"name": "Resourcegroup",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsCSV_new_log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsparquet_log')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsparquet_log",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "log.parquet",
						"fileSystem": "parquet"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Correlationid",
						"type": "UTF8"
					},
					{
						"name": "Operationname",
						"type": "UTF8"
					},
					{
						"name": "Status",
						"type": "UTF8"
					},
					{
						"name": "Eventcategory",
						"type": "UTF8"
					},
					{
						"name": "Level",
						"type": "UTF8"
					},
					{
						"name": "Time",
						"type": "UTF8"
					},
					{
						"name": "Subscription",
						"type": "UTF8"
					},
					{
						"name": "Eventinitiatedby",
						"type": "UTF8"
					},
					{
						"name": "Resourcetype",
						"type": "UTF8"
					},
					{
						"name": "Resourcegroup",
						"type": "UTF8"
					},
					{
						"name": "Resource",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsparquet_log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/orderheadertable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsAppDb20231107",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "orderid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ordernumber",
						"type": "varchar"
					},
					{
						"name": "customerid",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "orderheader"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsAppDb20231107')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsAppDb20231107')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('lsAppDb20231107_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsAppdb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('lsAppdb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsCSVCustomer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lsCSVCustomer_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lsCSVCustomer_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsCSV_log')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lsCSV_log_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lsCSV_log_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsCSV_new_log')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lsCSV_new_log_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lsCSV_new_log_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsparquet_log')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lsparquet_log_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lsparquet_log_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsCSV_log",
								"type": "DatasetReference"
							},
							"name": "logcsvstream"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsparquet_log",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "lsparquet_log",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          Correlationid as string,",
						"          Operationname as string,",
						"          Status as string,",
						"          Eventcategory as string,",
						"          Level as string,",
						"          Time as string,",
						"          Subscription as string,",
						"          Eventinitiatedby as string,",
						"          Resourcetype as string,",
						"          Resourcegroup as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> logcsvstream",
						"logcsvstream sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Correlationid as string,",
						"          Operationname as string,",
						"          Status as string,",
						"          Eventcategory as string,",
						"          Level as string,",
						"          Time as string,",
						"          Subscription as string,",
						"          Eventinitiatedby as string,",
						"          Resourcetype as string,",
						"          Resourcegroup as string,",
						"          Resource as string",
						"     ),",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_fileSystem: 'parquet',",
						"     mapColumn(",
						"          Correlationid,",
						"          Operationname,",
						"          Status,",
						"          Eventcategory,",
						"          Level,",
						"          Time,",
						"          Subscription,",
						"          Eventinitiatedby,",
						"          Resourcetype,",
						"          Resourcegroup",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsCSV_log')]",
				"[concat(variables('factoryId'), '/datasets/dsparquet_log')]",
				"[concat(variables('factoryId'), '/linkedServices/lsparquet_log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "customerTable",
								"type": "DatasetReference"
							},
							"name": "customertablestream"
						},
						{
							"dataset": {
								"referenceName": "orderheadertable",
								"type": "DatasetReference"
							},
							"name": "orderheaderstream"
						},
						{
							"dataset": {
								"referenceName": "OrdersInPool",
								"type": "DatasetReference"
							},
							"name": "GETMAXCustomerSK"
						},
						{
							"dataset": {
								"referenceName": "OrdersInPool",
								"type": "DatasetReference"
							},
							"name": "ListOfOrderIds"
						}
					],
					"sinks": [
						{
							"name": "OrdersSKSink"
						},
						{
							"dataset": {
								"referenceName": "OrdersInPool",
								"type": "DatasetReference"
							},
							"name": "dimOrders"
						}
					],
					"transformations": [
						{
							"name": "customerjointoorderheader"
						},
						{
							"name": "selectColumns"
						},
						{
							"name": "OrdersSK"
						},
						{
							"name": "DerivedColumnsTotalAmountOrdersSK"
						},
						{
							"name": "OrderIdDoesNotExist"
						},
						{
							"name": "DropRowIfCustomerIdIsNull"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customerid as integer,",
						"          customername as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> customertablestream",
						"source(output(",
						"          orderid as integer,",
						"          ordernumber as string,",
						"          customerid as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> orderheaderstream",
						"source(output(",
						"          ordersSK as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT coalesce(MAX(ordersSK), 0) as ordersSK from dbo.orders',",
						"     format: 'query',",
						"     staged: true) ~> GETMAXCustomerSK",
						"source(output(",
						"          orderId as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT distinct orderId from dbo.orders',",
						"     format: 'query',",
						"     staged: true) ~> ListOfOrderIds",
						"customertablestream, OrderIdDoesNotExist join(customertablestream@customerid == orderheaderstream@customerid,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> customerjointoorderheader",
						"customerjointoorderheader select(mapColumn(",
						"          customerid = customertablestream@customerid,",
						"          customername,",
						"          orderid,",
						"          ordernumber",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectColumns",
						"DropRowIfCustomerIdIsNull keyGenerate(output(OrdersSK as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> OrdersSK",
						"OrdersSK derive(OrdersSK = coalesce(OrdersSK, 0) + coalesce(OrdersSKSink#outputs()[1].ordersSK, 0),",
						"          TotalAmount = multiply(coalesce(customerid, 0), coalesce(orderid, 0))) ~> DerivedColumnsTotalAmountOrdersSK",
						"orderheaderstream, ListOfOrderIds exists(orderheaderstream@orderid == ListOfOrderIds@orderId,",
						"     negate:true,",
						"     broadcast: 'auto')~> OrderIdDoesNotExist",
						"selectColumns filter(!(isNull({customerid}))) ~> DropRowIfCustomerIdIsNull",
						"GETMAXCustomerSK sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 0,",
						"     mapColumn(",
						"          ordersSK",
						"     )) ~> OrdersSKSink",
						"DerivedColumnsTotalAmountOrdersSK sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ordersSK as integer,",
						"          orderId as integer,",
						"          customerId as integer,",
						"          CustomerName as string,",
						"          OrderNumber as string,",
						"          TotalAmount as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ordersSK = OrdersSK,",
						"          orderId = orderid,",
						"          customerId = customerid,",
						"          CustomerName = customername,",
						"          OrderNumber = ordernumber,",
						"          TotalAmount",
						"     )) ~> dimOrders"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/customerTable')]",
				"[concat(variables('factoryId'), '/datasets/orderheadertable')]",
				"[concat(variables('factoryId'), '/datasets/OrdersInPool')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimCustomerCSVMetaData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsCSV_log",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "DimCustomer",
						"fileSystem": "csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "NameStyle",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Suffix",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					},
					{
						"name": "SalesPerson",
						"type": "String"
					},
					{
						"name": "EmailAddress",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "PasswordHash",
						"type": "String"
					},
					{
						"name": "PasswordSalt",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsCSV_log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompanyName",
						"type": "varchar"
					},
					{
						"name": "SalesPerson",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimCustomerCSVCopy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsCSVCustomer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "DimCustomer",
						"fileSystem": "csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "NameStyle",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Suffix",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					},
					{
						"name": "SalesPerson",
						"type": "String"
					},
					{
						"name": "EmailAddress",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "PasswordHash",
						"type": "String"
					},
					{
						"name": "PasswordSalt",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsCSVCustomer')]"
			]
		}
	]
}